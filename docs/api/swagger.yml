swagger: "2.0"

info:
  description: "Тестовый API"
  version: "1.0.0"
  title: "test api"
  contact:
    email: "viktor@kusurov.ru"
tags:
  - name: "catalog"
    description: "Каталовек товаров"
  - name: "users"
    description: "Операции с пользователями"
  - name: "categories"
    description: "Операции с категориями"
  - name: "products"
    description: "Операции с товарами"
schemes:
  - "http"

paths:
  /api/catalog:
    get:
      tags:
        - "catalog"
      summary: "Просмотр каталога"
      description: "Выводит все товары, вне зависимости от категории"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            type: "object"
            properties:
              searchCriteria:
                type: "object"
                properties:
                  title:
                    type: "string"
      responses:
        200:
          description: "Каталог отображен"
          schema:
            $ref: "#/definitions/Catalog"
        400:
          description: "Ошибка в запросе"

  /api/catalog/{category_id}:
    get:
      tags:
        - "catalog"
      summary: "Просмотр каталога из категории"
      description: "Выводит все товары для конкретной категории"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "category_id"
          description: "id категории для поиска"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          schema:
            type: "object"
            properties:
              searchCriteria:
                type: "object"
                properties:
                  title:
                    type: "string"
      responses:
        200:
          description: "Каталог отображен"
          schema:
            $ref: "#/definitions/Catalog"
        400:
          description: "Ошибка в запросе"


  /api/users:
    post:
      tags:
        - "users"
      summary: "Добавление нового пользователя"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              login:
                type: "string"
              phone:
                type: "integer"
                format: "int64"
              name:
                type: "string"
              password:
                type: "string"
      responses:
        200:
          description: "Пользователь зарегистрирован"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Ошибка в запросе"

  /api/users/{id}:
    get:
      tags:
        - "users"
      summary: "Поиск пользователя по id"
      description: "Возвращает информацию по конкретному пользователю"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "id пользователя"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Информация предоставлена"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Ошибка в запросе"

  /api/categories:
    post:
      tags:
        - "categories"
      summary: "Создать категорию"
      description: "Создание новой категории"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              title:
                type: "string"
      responses:
        200:
          description: "Категория создана"
          schema:
            $ref: "#/definitions/Category"
        400:
          description: "Ошибка в запросе"

    get:
      tags:
        - "categories"
      summary: "Поиск категорий"
      description: "Возвращает все категории"
      produces:
        - "application/json"
      responses:
        200:
          description: "Категории показаны"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        400:
          description: "Ошибка в запросе"

  /api/categories/{id}:
    get:
      tags:
        - "categories"
      summary: "Поиск категории по id"
      description: "Возвращает информацию по категории"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id категории"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Информация показана"
          schema:
            $ref: "#/definitions/Category"
        400:
          description: "Ошибка в запросе"

  /api/categories/{id}/disable:
    put:
      tags:
        - "categories"
      summary: "Отключить вывод категории"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id категории"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Категория отключена"
          schema:
            $ref: "#/definitions/Category"
        400:
          description: "Ошибка в запросе"

  /api/categories/{id}/enable:
    put:
      tags:
        - "categories"
      summary: "Включить вывод категории"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id категории"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Категория включена"
          schema:
            $ref: "#/definitions/Category"
        400:
          description: "Ошибка в запросе"

  /api/categories/{id}/addProduct:
    post:
      tags:
        - "categories"
      summary: "Добавляет товар в категорию"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "id категории, в которую добавить товар"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              title:
                type: "string"
              weight:
                type: "number"
                format: "float32"
              size:
                type: "number"
                format: "float32"
              description:
                type: "string"
              photoLink:
                type: "string"
              price:
                type: "number"
                format: "float32"
      responses:
        200:
          description: "Продукт создан"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Ошибка в запросе"

  /api/products/{id}:
    get:
      tags:
        - "products"
      summary: "Поиск товара по id"
      description: "Возвращает информацию о товаре"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id товара"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Информация показана"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Ошибка в запросе"

  /api/products/{id}/disable:
    put:
      tags:
        - "products"
      summary: "Отключить вывод товара"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id товара"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Товар отключен"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Ошибка в запросе"

  /api/products/{id}/enable:
    put:
      tags:
        - "products"
      summary: "Включить вывод товара"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "id товара"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Товар включен"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Ошибка в запросе"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      login:
        type: "string"
      phone:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      password:
        type: "string"
      access:
        type: "integer"
        format: "int8"
        description: "Статус пользователя"
        enum:
          - 0
          - 1
        default: 0

  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      status:
        type: "integer"
        format: "int8"
        description: "Статус категории, возможно ли просмотреть"
        enum:
          - 0
          - 1
        default: 0

  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      weight:
        type: "number"
        format: "float32"
      size:
        type: "number"
        format: "float32"
      description:
        type: "string"
      photoLink:
        type: "string"
      price:
        type: "number"
        format: "float32"
      status:
        type: "integer"
        format: "int8"
        description: "Статус продукта, возможно ли просмотреть"
        enum:
          - 0
          - 1
        default: 0
      category:
        $ref: "#/definitions/Category"

  Catalog:
    type: "array"
    items:
      $ref: "#/definitions/Product"
